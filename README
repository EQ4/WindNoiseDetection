This library automatically analyses wav files and detect regions where 
there may be wind noise.  It is licensed under the MIT license, it uses the KISS_fft 
library which is licensed under the revised BSD license, therefore you are free to use this 
in pretty much any project.  If you do use this in any project an aknowledgement would be nice
please reference this Link: 
http://www.salford.ac.uk/computing-science-engineering/subjects/acoustics-audio-and-video
It was developed at the University of salford and uses bagged decision tree to analyse MFCCs 
to discover if any audio frames contain microphone wind noise, it is part of the Good Recording project at the 
university of Salford Acoustic Research Centre
The output is a text file which begins with the wav file header information and follows with the analysis

Time (s) | dBA | Average Wind Level | Ave SNR | Combined result

The Average Wind Level class varies from 0 to 3,

0 :  < 30 dBA
1 : 30 to 50 dBA
2 : 50 to 70 dBA
3 : > 70 dBA

Ave SNR class

0 : < -20 dB   (lots of wind noise!)
1 : -20 to 10dB
2 : -10 to 0dB
3 : 0 to 10 dB
4 : 10 to 20 dB
5 : >  20dB  (very  little wind noise

the combined result represents the audio quality

it is the average SNR class when the Average Wind Level > 1  normalised 
so that 0 is the worst SNR and 1 the best
In other words if there is no wind noise indicated by the wind level, the snr is forced to 0
high values should indicate the presence of wind noise

Wav files must be 16/ 32 bit in, or 32 bit float PCM

All channels are collapsed to one (average of all channels)

Usage:

First compile the program,

then run using the following parameter syntax


<executable> "-i" "iphone1.wav" "-o" "iphone1.txt" "-t" "1" "-g" "1" "-f" "43

-i - input file name path
-o output filename path
-t tree size to use (1,2,3) 1 is a small tree, 3 is a big tree.
-g Gain to apply, currently all wav files are normalise so that +-1 peak to peak represents a level recorded at 104 dB
-f Analysis window (frames) 43 is roughly 1 s, windows are 1024 samples

only the input and output parameters are required


<executable> "-i" "iphone1.wav" "-o" "iphone1.txt"